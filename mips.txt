.data
var_TOKEN_OTHER_2: .word 1 
var_TOKEN_NUM_1: .word 0 
var_ops_8: .word 0: 256
var_last_char_3: .word 32 
var_cur_token_6: .word 0: 1
var_oprs_7: .word 0: 256
var_num_4: .word 0: 1
var_other_5: .word 0: 1
.text
jal func_main
li $v0 10
syscall
func_is_space: 
subi $sp $sp 92 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label2:
# Pop var_c_9
move $8 $a0
# Eql tmp_3 var_c_9 32
li $28 32
seq $9 $8 $28
# Jwf tmp_3 label6
beqz $9 label6
label7:
# J label5
j label5
label6:
# Eql tmp_4 var_c_9 10
li $28 10
seq $8 $8 $28
# Jwf tmp_4 label4
beqz $8 label4
label8:
label5:
# Return 1
li $v0 1
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 92 
jr $ra
# J label3
j label3
label4:
# Return 0
li $v0 0
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 92 
jr $ra
label3:
# Return 0
li $v0 0
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 92 
jr $ra
func_next_token: 
subi $sp $sp 144 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label15:
label17:
# Load tmp_7 0(var_last_char_3)
la $28 var_last_char_3
lw $8 0($28)
# Push tmp_7
move $a0 $8
# Call func_is_space
jal func_is_space
label19:
# GetReturn tmp_8
move $8 $v0
# Jwf tmp_8 label16
beqz $8 label16
label20:
label18:
# Call func_next_char
jal func_next_char
label21:
# GetReturn tmp_9
move $8 $v0
# J label17
j label17
label16:
# Load tmp_10 0(var_last_char_3)
la $28 var_last_char_3
lw $8 0($28)
# Push tmp_10
move $a0 $8
# Call func_is_num
jal func_is_num
label25:
# GetReturn tmp_11
move $8 $v0
# Jwf tmp_11 label23
beqz $8 label23
label26:
label24:
# Load tmp_12 0(var_last_char_3)
la $28 var_last_char_3
lw $8 0($28)
# Sub tmp_13 tmp_12 48
li $28 48
subu $8 $8 $28
# Store tmp_13 0(var_num_4)
la $28 var_num_4
sw $8 0($28)
label28:
# Call func_next_char
jal func_next_char
label30:
# GetReturn tmp_14
move $8 $v0
# Push tmp_14
move $a0 $8
# Call func_is_num
jal func_is_num
label31:
# GetReturn tmp_15
move $8 $v0
# Jwf tmp_15 label27
beqz $8 label27
label32:
label29:
# Load tmp_16 0(var_num_4)
la $28 var_num_4
lw $8 0($28)
# Mul tmp_17 tmp_16 10
li $28 10
mulu $8 $8 $28
# Load tmp_18 0(var_last_char_3)
la $28 var_last_char_3
lw $9 0($28)
# Add tmp_19 tmp_17 tmp_18
addu $8 $8 $9
# Sub tmp_20 tmp_19 48
li $28 48
subu $8 $8 $28
# Store tmp_20 0(var_num_4)
la $28 var_num_4
sw $8 0($28)
# J label28
j label28
label27:
# Store 0 0(var_cur_token_6)
la $28 var_cur_token_6
li $27 0
sw $27 0($28)
# J label22
j label22
label23:
# Load tmp_21 0(var_last_char_3)
la $28 var_last_char_3
lw $8 0($28)
# Store tmp_21 0(var_other_5)
la $28 var_other_5
sw $8 0($28)
# Call func_next_char
jal func_next_char
label33:
# GetReturn tmp_22
move $8 $v0
# Store 1 0(var_cur_token_6)
la $28 var_cur_token_6
li $27 1
sw $27 0($28)
label22:
# Load tmp_23 0(var_cur_token_6)
la $28 var_cur_token_6
lw $8 0($28)
# Return tmp_23
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 144 
jr $ra
func_eval_op: 
subi $sp $sp 140 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label52:
# Pop var_op_18
move $11 $a0
# Pop var_lhs_19
move $10 $a1
# Pop var_rhs_20
move $9 $a2
# Eql tmp_72 var_op_18 43
li $28 43
seq $8 $11 $28
# Jwf tmp_72 label53
beqz $8 label53
label55:
label54:
# Add tmp_73 var_lhs_19 var_rhs_20
addu $8 $10 $9
# Return tmp_73
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 140 
jr $ra
label53:
# Eql tmp_74 var_op_18 45
li $28 45
seq $8 $11 $28
# Jwf tmp_74 label56
beqz $8 label56
label58:
label57:
# Sub tmp_75 var_lhs_19 var_rhs_20
subu $8 $10 $9
# Return tmp_75
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 140 
jr $ra
label56:
# Eql tmp_76 var_op_18 42
li $28 42
seq $8 $11 $28
# Jwf tmp_76 label59
beqz $8 label59
label61:
label60:
# Mul tmp_77 var_lhs_19 var_rhs_20
mulu $8 $10 $9
# Return tmp_77
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 140 
jr $ra
label59:
# Eql tmp_78 var_op_18 47
li $28 47
seq $8 $11 $28
# Jwf tmp_78 label62
beqz $8 label62
label64:
label63:
# Div tmp_79 var_lhs_19 var_rhs_20
div $10 $9
mflo $8
# Return tmp_79
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 140 
jr $ra
label62:
# Eql tmp_80 var_op_18 37
li $28 37
seq $8 $11 $28
# Jwf tmp_80 label65
beqz $8 label65
label67:
label66:
# Mod tmp_81 var_lhs_19 var_rhs_20
div $10 $9
mfhi $8
# Return tmp_81
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 140 
jr $ra
label65:
# Return 0
li $v0 0
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 140 
jr $ra
func_eval: 
subi $sp $sp 412 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label68:
# Load tmp_82 0(var_cur_token_6)
la $28 var_cur_token_6
lw $8 0($28)
# Neq tmp_83 tmp_82 0
li $28 0
sne $8 $8 $28
# Jwf tmp_83 label69
beqz $8 label69
label71:
label70:
# Call func_panic
jal func_panic
label72:
# GetReturn tmp_84
move $8 $v0
# Return tmp_84
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 412 
jr $ra
label69:
# Assign tmp_85 1
li $27 1
move $9 $27
# Assign tmp_86 0
li $27 0
move $8 $27
# Mul tmp_85 tmp_85 256
li $28 256
mulu $9 $9 $28
# LoadPtr tmp_87 tmp_86(var_oprs_7)
la $28 var_oprs_7
sll $27 $8 2
addu $8 $27 $28
# Load tmp_88 0(var_num_4)
la $28 var_num_4
lw $9 0($28)
# Push tmp_87
move $a0 $8
# Push tmp_88
move $a1 $9
# Call func_stack_push
jal func_stack_push
label73:
# Call func_next_token
jal func_next_token
label74:
# GetReturn tmp_89
move $8 $v0
label76:
# Load tmp_90 0(var_cur_token_6)
la $28 var_cur_token_6
lw $8 0($28)
# Eql tmp_91 tmp_90 1
li $28 1
seq $8 $8 $28
# Jwf tmp_91 label75
beqz $8 label75
label78:
label77:
# Load tmp_92 0(var_other_5)
la $28 var_other_5
lw $8 0($28)
# Assign var_op_21 tmp_92
move $8 $8
# Push var_op_21
move $a0 $8
# Call func_get_op_prec
jal func_get_op_prec
label81:
# GetReturn tmp_93
move $9 $v0
# Not tmp_94 tmp_93
seq $9 $9 $0
# Jwf tmp_94 label79
beqz $9 label79
label82:
label80:
# J label75
j label75
label83:
label79:
# Call func_next_token
jal func_next_token
label84:
# GetReturn tmp_95
move $9 $v0
label86:
# Assign tmp_96 1
li $27 1
move $10 $27
# Assign tmp_97 0
li $27 0
move $9 $27
# Mul tmp_96 tmp_96 256
li $28 256
mulu $10 $10 $28
# LoadPtr tmp_98 tmp_97(var_ops_8)
la $28 var_ops_8
sll $27 $9 2
addu $9 $27 $28
# Push tmp_98
move $a0 $9
# Call func_stack_size
jal func_stack_size
label88:
# GetReturn tmp_99
move $9 $v0
# Jwf tmp_99 label85
beqz $9 label85
label89:
# Assign tmp_100 1
li $27 1
move $9 $27
# Assign tmp_101 0
li $27 0
move $10 $27
# Mul tmp_100 tmp_100 256
li $28 256
mulu $9 $9 $28
# LoadPtr tmp_102 tmp_101(var_ops_8)
la $28 var_ops_8
sll $27 $10 2
addu $9 $27 $28
# Push tmp_102
move $a0 $9
# Call func_stack_peek
jal func_stack_peek
label90:
# GetReturn tmp_103
move $9 $v0
# Push tmp_103
move $a0 $9
# Call func_get_op_prec
jal func_get_op_prec
label91:
# GetReturn tmp_104
move $9 $v0
# Push var_op_21
move $a0 $8
# Call func_get_op_prec
jal func_get_op_prec
label92:
# GetReturn tmp_105
move $10 $v0
# Ge tmp_106 tmp_104 tmp_105
sge $9 $9 $10
# Jwf tmp_106 label85
beqz $9 label85
label93:
label87:
# Assign tmp_107 1
li $27 1
move $10 $27
# Assign tmp_108 0
li $27 0
move $9 $27
# Mul tmp_107 tmp_107 256
li $28 256
mulu $10 $10 $28
# LoadPtr tmp_109 tmp_108(var_ops_8)
la $28 var_ops_8
sll $27 $9 2
addu $9 $27 $28
# Push tmp_109
move $a0 $9
# Call func_stack_pop
jal func_stack_pop
label94:
# GetReturn tmp_110
move $9 $v0
# Assign var_cur_op_22 tmp_110
move $11 $9
# Assign tmp_111 1
li $27 1
move $9 $27
# Assign tmp_112 0
li $27 0
move $10 $27
# Mul tmp_111 tmp_111 256
li $28 256
mulu $9 $9 $28
# LoadPtr tmp_113 tmp_112(var_oprs_7)
la $28 var_oprs_7
sll $27 $10 2
addu $9 $27 $28
# Push tmp_113
move $a0 $9
# Call func_stack_pop
jal func_stack_pop
label95:
# GetReturn tmp_114
move $9 $v0
# Assign var_rhs_23 tmp_114
move $12 $9
# Assign tmp_115 1
li $27 1
move $9 $27
# Assign tmp_116 0
li $27 0
move $10 $27
# Mul tmp_115 tmp_115 256
li $28 256
mulu $9 $9 $28
# LoadPtr tmp_117 tmp_116(var_oprs_7)
la $28 var_oprs_7
sll $27 $10 2
addu $9 $27 $28
# Push tmp_117
move $a0 $9
# Call func_stack_pop
jal func_stack_pop
label96:
# GetReturn tmp_118
move $9 $v0
# Assign var_lhs_24 tmp_118
move $9 $9
# Assign tmp_119 1
li $27 1
move $13 $27
# Assign tmp_120 0
li $27 0
move $10 $27
# Mul tmp_119 tmp_119 256
li $28 256
mulu $13 $13 $28
# LoadPtr tmp_121 tmp_120(var_oprs_7)
la $28 var_oprs_7
sll $27 $10 2
addu $10 $27 $28
# Push var_cur_op_22
move $a0 $11
# Push var_lhs_24
move $a1 $9
# Push var_rhs_23
move $a2 $12
# Call func_eval_op
jal func_eval_op
label97:
# GetReturn tmp_122
move $9 $v0
# Push tmp_121
move $a0 $10
# Push tmp_122
move $a1 $9
# Call func_stack_push
jal func_stack_push
label98:
# J label86
j label86
label85:
# Assign tmp_123 1
li $27 1
move $10 $27
# Assign tmp_124 0
li $27 0
move $9 $27
# Mul tmp_123 tmp_123 256
li $28 256
mulu $10 $10 $28
# LoadPtr tmp_125 tmp_124(var_ops_8)
la $28 var_ops_8
sll $27 $9 2
addu $9 $27 $28
# Push tmp_125
move $a0 $9
# Push var_op_21
move $a1 $8
# Call func_stack_push
jal func_stack_push
label99:
# Load tmp_126 0(var_cur_token_6)
la $28 var_cur_token_6
lw $8 0($28)
# Neq tmp_127 tmp_126 0
li $28 0
sne $8 $8 $28
# Jwf tmp_127 label100
beqz $8 label100
label102:
label101:
# Call func_panic
jal func_panic
label103:
# GetReturn tmp_128
move $8 $v0
# Return tmp_128
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 412 
jr $ra
label100:
# Assign tmp_129 1
li $27 1
move $9 $27
# Assign tmp_130 0
li $27 0
move $8 $27
# Mul tmp_129 tmp_129 256
li $28 256
mulu $9 $9 $28
# LoadPtr tmp_131 tmp_130(var_oprs_7)
la $28 var_oprs_7
sll $27 $8 2
addu $9 $27 $28
# Load tmp_132 0(var_num_4)
la $28 var_num_4
lw $8 0($28)
# Push tmp_131
move $a0 $9
# Push tmp_132
move $a1 $8
# Call func_stack_push
jal func_stack_push
label104:
# Call func_next_token
jal func_next_token
label105:
# GetReturn tmp_133
move $8 $v0
# J label76
j label76
label75:
# Call func_next_token
jal func_next_token
label106:
# GetReturn tmp_134
move $8 $v0
label108:
# Assign tmp_135 1
li $27 1
move $8 $27
# Assign tmp_136 0
li $27 0
move $9 $27
# Mul tmp_135 tmp_135 256
li $28 256
mulu $8 $8 $28
# LoadPtr tmp_137 tmp_136(var_ops_8)
la $28 var_ops_8
sll $27 $9 2
addu $8 $27 $28
# Push tmp_137
move $a0 $8
# Call func_stack_size
jal func_stack_size
label110:
# GetReturn tmp_138
move $8 $v0
# Jwf tmp_138 label107
beqz $8 label107
label111:
label109:
# Assign tmp_139 1
li $27 1
move $8 $27
# Assign tmp_140 0
li $27 0
move $9 $27
# Mul tmp_139 tmp_139 256
li $28 256
mulu $8 $8 $28
# LoadPtr tmp_141 tmp_140(var_ops_8)
la $28 var_ops_8
sll $27 $9 2
addu $8 $27 $28
# Push tmp_141
move $a0 $8
# Call func_stack_pop
jal func_stack_pop
label112:
# GetReturn tmp_142
move $8 $v0
# Assign var_cur_op_25 tmp_142
move $9 $8
# Assign tmp_143 1
li $27 1
move $10 $27
# Assign tmp_144 0
li $27 0
move $8 $27
# Mul tmp_143 tmp_143 256
li $28 256
mulu $10 $10 $28
# LoadPtr tmp_145 tmp_144(var_oprs_7)
la $28 var_oprs_7
sll $27 $8 2
addu $8 $27 $28
# Push tmp_145
move $a0 $8
# Call func_stack_pop
jal func_stack_pop
label113:
# GetReturn tmp_146
move $8 $v0
# Assign var_rhs_26 tmp_146
move $10 $8
# Assign tmp_147 1
li $27 1
move $11 $27
# Assign tmp_148 0
li $27 0
move $8 $27
# Mul tmp_147 tmp_147 256
li $28 256
mulu $11 $11 $28
# LoadPtr tmp_149 tmp_148(var_oprs_7)
la $28 var_oprs_7
sll $27 $8 2
addu $8 $27 $28
# Push tmp_149
move $a0 $8
# Call func_stack_pop
jal func_stack_pop
label114:
# GetReturn tmp_150
move $8 $v0
# Assign var_lhs_27 tmp_150
move $8 $8
# Assign tmp_151 1
li $27 1
move $11 $27
# Assign tmp_152 0
li $27 0
move $12 $27
# Mul tmp_151 tmp_151 256
li $28 256
mulu $11 $11 $28
# LoadPtr tmp_153 tmp_152(var_oprs_7)
la $28 var_oprs_7
sll $27 $12 2
addu $11 $27 $28
# Push var_cur_op_25
move $a0 $9
# Push var_lhs_27
move $a1 $8
# Push var_rhs_26
move $a2 $10
# Call func_eval_op
jal func_eval_op
label115:
# GetReturn tmp_154
move $8 $v0
# Push tmp_153
move $a0 $11
# Push tmp_154
move $a1 $8
# Call func_stack_push
jal func_stack_push
label116:
# J label108
j label108
label107:
# Assign tmp_155 1
li $27 1
move $8 $27
# Assign tmp_156 0
li $27 0
move $9 $27
# Mul tmp_155 tmp_155 256
li $28 256
mulu $8 $8 $28
# LoadPtr tmp_157 tmp_156(var_oprs_7)
la $28 var_oprs_7
sll $27 $9 2
addu $8 $27 $28
# Push tmp_157
move $a0 $8
# Call func_stack_peek
jal func_stack_peek
label117:
# GetReturn tmp_158
move $8 $v0
# Return tmp_158
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 412 
jr $ra
func_next_char: 
subi $sp $sp 84 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label1:
# FetchInt
li $v0, 5
syscall
# GetInt tmp_1
move $8 $v0
# Store tmp_1 0(var_last_char_3)
la $28 var_last_char_3
sw $8 0($28)
# Load tmp_2 0(var_last_char_3)
la $28 var_last_char_3
lw $8 0($28)
# Return tmp_2
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 84 
jr $ra
func_panic: 
subi $sp $sp 76 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label34:
# PrintInt 112
li $a0 112
li $v0, 1
syscall
# PrintInt 97
li $a0 97
li $v0, 1
syscall
# PrintInt 110
li $a0 110
li $v0, 1
syscall
# PrintInt 105
li $a0 105
li $v0, 1
syscall
# PrintInt 99
li $a0 99
li $v0, 1
syscall
# PrintInt 33
li $a0 33
li $v0, 1
syscall
# PrintInt 10
li $a0 10
li $v0, 1
syscall
# Return -1
li $v0 -1
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 76 
jr $ra
func_get_op_prec: 
subi $sp $sp 104 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label35:
# Pop var_op_11
move $8 $a0
# Eql tmp_24 var_op_11 43
li $28 43
seq $9 $8 $28
# Jwf tmp_24 label38
beqz $9 label38
label39:
# J label37
j label37
label38:
# Eql tmp_25 var_op_11 45
li $28 45
seq $9 $8 $28
# Jwf tmp_25 label36
beqz $9 label36
label40:
label37:
# Return 10
li $v0 10
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 104 
jr $ra
label36:
# Eql tmp_26 var_op_11 42
li $28 42
seq $9 $8 $28
# Jwf tmp_26 label44
beqz $9 label44
label45:
# J label42
j label42
label44:
# Eql tmp_27 var_op_11 47
li $28 47
seq $9 $8 $28
# Jwf tmp_27 label43
beqz $9 label43
label46:
# J label42
j label42
label43:
# Eql tmp_28 var_op_11 37
li $28 37
seq $8 $8 $28
# Jwf tmp_28 label41
beqz $8 label41
label47:
label42:
# Return 20
li $v0 20
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 104 
jr $ra
label41:
# Return 0
li $v0 0
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 104 
jr $ra
func_stack_peek: 
subi $sp $sp 116 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label50:
# Pop var_s_16
move $11 $a0
# Assign tmp_60 1
li $27 1
move $9 $27
# Assign tmp_61 0
li $27 0
move $10 $27
# Mul tmp_62 tmp_60 0
li $28 0
mulu $8 $9 $28
# Add tmp_61 tmp_61 tmp_62
addu $10 $10 $8
# Mul tmp_60 tmp_60 0
li $28 0
mulu $9 $9 $28
# Load tmp_63 tmp_61(var_s_16)
sll $27 $10 2
addu $28 $11 $27
lw $10 0($28)
# Assign tmp_64 1
li $27 1
move $8 $27
# Assign tmp_65 0
li $27 0
move $9 $27
# Mul tmp_66 tmp_64 tmp_63
mulu $10 $8 $10
# Add tmp_65 tmp_65 tmp_66
addu $9 $9 $10
# Mul tmp_64 tmp_64 0
li $28 0
mulu $8 $8 $28
# Load tmp_67 tmp_65(var_s_16)
sll $27 $9 2
addu $28 $11 $27
lw $8 0($28)
# Return tmp_67
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 116 
jr $ra
func_stack_pop: 
subi $sp $sp 152 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label49:
# Pop var_s_14
move $11 $a0
# Assign tmp_44 1
li $27 1
move $9 $27
# Assign tmp_45 0
li $27 0
move $10 $27
# Mul tmp_46 tmp_44 0
li $28 0
mulu $8 $9 $28
# Add tmp_45 tmp_45 tmp_46
addu $10 $10 $8
# Mul tmp_44 tmp_44 0
li $28 0
mulu $9 $9 $28
# Load tmp_47 tmp_45(var_s_14)
sll $27 $10 2
addu $28 $11 $27
lw $8 0($28)
# Assign tmp_48 1
li $27 1
move $9 $27
# Assign tmp_49 0
li $27 0
move $10 $27
# Mul tmp_50 tmp_48 tmp_47
mulu $8 $9 $8
# Add tmp_49 tmp_49 tmp_50
addu $10 $10 $8
# Mul tmp_48 tmp_48 0
li $28 0
mulu $9 $9 $28
# Load tmp_51 tmp_49(var_s_14)
sll $27 $10 2
addu $28 $11 $27
lw $8 0($28)
# Assign var_last_15 tmp_51
move $12 $8
# Assign tmp_52 1
li $27 1
move $10 $27
# Assign tmp_53 0
li $27 0
move $8 $27
# Mul tmp_54 tmp_52 0
li $28 0
mulu $9 $10 $28
# Add tmp_53 tmp_53 tmp_54
addu $8 $8 $9
# Mul tmp_52 tmp_52 0
li $28 0
mulu $10 $10 $28
# Assign tmp_55 1
li $27 1
move $10 $27
# Assign tmp_56 0
li $27 0
move $13 $27
# Mul tmp_57 tmp_55 0
li $28 0
mulu $9 $10 $28
# Add tmp_56 tmp_56 tmp_57
addu $13 $13 $9
# Mul tmp_55 tmp_55 0
li $28 0
mulu $10 $10 $28
# Load tmp_58 tmp_56(var_s_14)
sll $27 $13 2
addu $28 $11 $27
lw $9 0($28)
# Sub tmp_59 tmp_58 1
li $28 1
subu $9 $9 $28
# Store tmp_59 tmp_53(var_s_14)
sll $27 $8 2
addu $28 $11 $27
sw $9 0($28)
# Return var_last_15
move $v0 $12
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 152 
jr $ra
func_main: 
subi $sp $sp 20 
sw $31 0($sp)
label118:
# Assign var_count_28 0
li $27 0
move $9 $27
# FetchInt
li $v0, 5
syscall
# GetInt var_count_28
move $9 $v0
# Call func_next_token
jal func_next_token
label119:
# GetReturn tmp_159
move $8 $v0
label121:
# Jwf var_count_28 label120
beqz $9 label120
label123:
label122:
# Call func_eval
jal func_eval
label124:
# GetReturn tmp_160
move $8 $v0
# PrintInt tmp_160
move $a0 $8
li $v0, 1
syscall
# PrintInt 10
li $a0 10
li $v0, 1
syscall
# Sub tmp_161 var_count_28 1
li $28 1
subu $8 $9 $28
# Assign var_count_28 tmp_161
move $9 $8
# J label121
j label121
label120:
# PrintInt 0
li $a0 0
li $v0, 1
syscall
# Return 0
li $v0 0
# PlayBack
lw $31 0($sp)
addi $sp $sp 20 
jr $ra
func_is_num: 
subi $sp $sp 92 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label9:
# Pop var_c_10
move $9 $a0
# Ge tmp_5 var_c_10 48
li $28 48
sge $8 $9 $28
# Jwf tmp_5 label11
beqz $8 label11
label13:
# Le tmp_6 var_c_10 57
li $28 57
sle $8 $9 $28
# Jwf tmp_6 label11
beqz $8 label11
label14:
label12:
# Return 1
li $v0 1
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 92 
jr $ra
# J label10
j label10
label11:
# Return 0
li $v0 0
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 92 
jr $ra
label10:
# Return 0
li $v0 0
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 92 
jr $ra
func_stack_push: 
subi $sp $sp 152 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label48:
# Pop var_s_12
move $12 $a0
# Pop var_v_13
move $10 $a1
# Assign tmp_29 1
li $27 1
move $11 $27
# Assign tmp_30 0
li $27 0
move $9 $27
# Mul tmp_31 tmp_29 0
li $28 0
mulu $8 $11 $28
# Add tmp_30 tmp_30 tmp_31
addu $9 $9 $8
# Mul tmp_29 tmp_29 0
li $28 0
mulu $11 $11 $28
# Assign tmp_32 1
li $27 1
move $8 $27
# Assign tmp_33 0
li $27 0
move $11 $27
# Mul tmp_34 tmp_32 0
li $28 0
mulu $13 $8 $28
# Add tmp_33 tmp_33 tmp_34
addu $11 $11 $13
# Mul tmp_32 tmp_32 0
li $28 0
mulu $8 $8 $28
# Load tmp_35 tmp_33(var_s_12)
sll $27 $11 2
addu $28 $12 $27
lw $8 0($28)
# Add tmp_36 tmp_35 1
li $28 1
addu $8 $8 $28
# Store tmp_36 tmp_30(var_s_12)
sll $27 $9 2
addu $28 $12 $27
sw $8 0($28)
# Assign tmp_37 1
li $27 1
move $9 $27
# Assign tmp_38 0
li $27 0
move $11 $27
# Mul tmp_39 tmp_37 0
li $28 0
mulu $8 $9 $28
# Add tmp_38 tmp_38 tmp_39
addu $11 $11 $8
# Mul tmp_37 tmp_37 0
li $28 0
mulu $9 $9 $28
# Load tmp_40 tmp_38(var_s_12)
sll $27 $11 2
addu $28 $12 $27
lw $9 0($28)
# Assign tmp_41 1
li $27 1
move $11 $27
# Assign tmp_42 0
li $27 0
move $8 $27
# Mul tmp_43 tmp_41 tmp_40
mulu $9 $11 $9
# Add tmp_42 tmp_42 tmp_43
addu $8 $8 $9
# Mul tmp_41 tmp_41 0
li $28 0
mulu $11 $11 $28
# Store var_v_13 tmp_42(var_s_12)
sll $27 $8 2
addu $28 $12 $27
sw $10 0($28)
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 152 
jr $ra
func_stack_size: 
subi $sp $sp 100 
sw $8 72($sp)
sw $9 68($sp)
sw $10 64($sp)
sw $11 60($sp)
sw $12 56($sp)
sw $13 52($sp)
sw $14 48($sp)
sw $15 44($sp)
sw $16 40($sp)
sw $17 36($sp)
sw $18 32($sp)
sw $19 28($sp)
sw $20 24($sp)
sw $21 20($sp)
sw $22 16($sp)
sw $23 12($sp)
sw $24 8($sp)
sw $25 4($sp)
sw $31 0($sp)
label51:
# Pop var_s_17
move $9 $a0
# Assign tmp_68 1
li $27 1
move $10 $27
# Assign tmp_69 0
li $27 0
move $11 $27
# Mul tmp_70 tmp_68 0
li $28 0
mulu $8 $10 $28
# Add tmp_69 tmp_69 tmp_70
addu $11 $11 $8
# Mul tmp_68 tmp_68 0
li $28 0
mulu $10 $10 $28
# Load tmp_71 tmp_69(var_s_17)
sll $27 $11 2
addu $28 $9 $27
lw $8 0($28)
# Return tmp_71
move $v0 $8
# PlayBack
lw $8 72($sp)
lw $9 68($sp)
lw $10 64($sp)
lw $11 60($sp)
lw $12 56($sp)
lw $13 52($sp)
lw $14 48($sp)
lw $15 44($sp)
lw $16 40($sp)
lw $17 36($sp)
lw $18 32($sp)
lw $19 28($sp)
lw $20 24($sp)
lw $21 20($sp)
lw $22 16($sp)
lw $23 12($sp)
lw $24 8($sp)
lw $25 4($sp)
lw $31 0($sp)
addi $sp $sp 100 
jr $ra
